// Generated by CoffeeScript 1.6.3
(function() {
  var parser;

  parser = {
    parseElementData: function(div, title) {
      var object;
      object = {};
      $("table", div).eq("0").find("table").remove();
      $("table", div).eq("0").find("tr").each(function(i, el) {
        var $el, key, subkey, value, _i, _len, _ref, _results;
        $el = $(el);
        key = $el.find("th").text();
        value = $el.find("td").text();
        if (key === "" || value === "") {

        } else if (key === "Electron configuration") {
          object[key] = value.split("\n")[0];
          return object["Visual configuration"] = value.split("\n")[1].split(", ");
        } else if (object[key]) {
          return object[key] += ", " + key;
        } else if (key.match(",")) {
          _ref = key.split(", ");
          _results = [];
          for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
            subkey = _ref[i];
            _results.push(object[subkey] = value.split(", ")[i]);
          }
          return _results;
        } else {
          return object[key] = value;
        }
      });
      return object;
    },
    parseInfoData: function(div, title) {
      var eq, object, titles;
      $("a, span", div).each(function(i, el) {
        return el.outerHTML = el.textContent;
      });
      div.contents().each(function() {
        if (this.nodeType === 8) {
          return $(this).remove();
        }
      });
      div.html(div.html().replace(/\[edit\]/gi, ""));
      div.html(div.html().replace(/[\s|\n]+/gi, " "));
      $("sup, sub, img, table, div", div).remove();
      eq = Infinity;
      titles = ["Notes", "See also", "References", "Further reading", "External Links", "Bibliography"];
      $("h2", div).each(function(i, el) {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = titles.length; _i < _len; _i++) {
          title = titles[_i];
          if (el.textContent === title && $(el).index() < eq) {
            _results.push(eq = $(el).index());
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      });
      while (eq < div.contents().length - 1 && div.children().get(eq)) {
        div.children().get(eq).outerHTML = "";
      }
      div.contents().each(function() {
        if (this.textContent === "") {
          this.outerHTML = "";
        }
        return $(this).removeAttr("style").removeAttr("class").removeAttr("id").removeAttr("title").removeAttr("scope");
      });
      return object = {
        title: title,
        html: div.html()
      };
    }
  };

  module.exports = parser;

}).call(this);
